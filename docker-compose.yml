version: '3'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: task-zookeeper
    healthcheck:
      test: ["CMD", "bash", "-c", "echo mntr | nc zookeeper 2181"]
      interval: 1s
      timeout: 5s
      retries: 10
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: task-broker
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      timeout: 20s
      retries: 10
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  broker-setup:
    image: confluentinc/cp-kafka:7.0.1
    container_name: task-broker_setup
    depends_on:
      broker:
        condition: "service_healthy"
    command: "bash -c 'cub kafka-ready -b broker:29092 1 20
                           && \ kafka-topics --if-not-exists --bootstrap-server broker:29092 --create --partitions 1 --topic finished_tasks
                          '"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: task-kafka_ui
    ports:
      - "8980:8080"
    restart: always
    depends_on:
      - broker
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181

  mysql:
    container_name: mysql8
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sword
      MYSQL_USER: sword
      MYSQL_PASSWORD: swordpass
    ports:
      - '3306:3306'
    volumes:
      - './docker/db/data:/var/lib/mysql'
      - './docker/db/my.cnf:/etc/mysql/conf.d/my.cnf'
      - './docker/db/sql:/docker-entrypoint-initdb.d'

volumes:
  go_modules:

